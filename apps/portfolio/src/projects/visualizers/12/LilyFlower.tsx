/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 models/lily_flower.gltf --transform
Files: models/lily_flower.gltf [410.78KB] > lily_flower-transformed.glb [23.9KB] (94%)
*/
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { MeshBasicMaterial, ShaderMaterial } from "three";
import CustomShaderMaterial from "three-custom-shader-material/vanilla";
import { GLTF } from "three-stdlib";

import displaceFlowerInstancedVertexShader from "./displace-flower-instanced.vert";

type GLTFResult = GLTF & {
  nodes: {
    Cube_2: THREE.Mesh;
    mesh_1: THREE.InstancedMesh;
    mesh_2: THREE.InstancedMesh;
    mesh_3: THREE.InstancedMesh;
  };
  materials: {};
};

const instancedShaderMaterial = new CustomShaderMaterial({
  baseMaterial: MeshBasicMaterial,
  wireframe: true,
  uniforms: {
    u_time: { value: 0 },
    u_amplitude: { value: 8 },
    u_base_frequency: { value: 0 },
    u_top_frequency: { value: 0 },
  },
  vertexShader: displaceFlowerInstancedVertexShader,
});

type Props = JSX.IntrinsicElements["group"] & {
  onUniformUpdate?: (uniforms: ShaderMaterial["uniforms"]) => void;
};

export function LilyFlower({ onUniformUpdate, ...rest }: Props) {
  const { nodes } = useGLTF(
    "/models/lily_flower-transformed.glb",
  ) as GLTFResult;

  useFrame(({ clock }) => {
    instancedShaderMaterial.uniforms.u_time.value = clock.getElapsedTime();

    onUniformUpdate?.(instancedShaderMaterial.uniforms);
  });

  return (
    <group {...rest} dispose={null}>
      <mesh
        geometry={nodes.Cube_2.geometry}
        material={new MeshBasicMaterial({ wireframe: true })}
        position={[-2.459, 2.215, 1.645]}
        rotation={[-Math.PI, Math.PI / 3, -2.644]}
        scale={0.01}
      />
      <instancedMesh
        args={[nodes.mesh_1.geometry, instancedShaderMaterial, 7]}
        instanceMatrix={nodes.mesh_1.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.mesh_2.geometry, instancedShaderMaterial, 7]}
        instanceMatrix={nodes.mesh_2.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.mesh_3.geometry, instancedShaderMaterial, 7]}
        instanceMatrix={nodes.mesh_3.instanceMatrix}
      />
    </group>
  );
}

useGLTF.preload("/models/lily_flower-transformed.glb");
